{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tusha\\\\Desktop\\\\React\\\\ETE\\\\Project\\\\src\\\\components\\\\Products\\\\Products.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport ListItem from \"./ListItems/ListItem\";\nimport axios from \"axios\"; //for network calls we use axios module\nimport Loader from \"../UI/Loader\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Products = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const params = useParams();\n  const history = useHistory();\n  const {\n    search\n  } = useLocation();\n  const queryParams = new URLSearchParams(search).get(\"search\");\n  useEffect(() => {\n    /* cant directly make the arrow fucntion asynchronous because it may result in asynchronous call but the above funciton is also used synchonously somewhere so bugs may be created . so instead make a new async() function  */\n    async function fetchItems() {\n      try {\n        // we will use this items.json to append after query to read data in a json fromat\n        let slug = `items.json`;\n        if (params.category) {\n          slug = `items-${params.category}.json`;\n        }\n        if (queryParams) {\n          slug += `?search=${queryParams}`;\n        }\n        // items-category-1.json\n        const response = await axios.get(`https://react-et-default-rtdb.firebaseio.com/${slug}`);\n        const data = response.data;\n        // we store the data from the web in this data\n\n        // if not receviec\n        if (!data) {\n          handleNotFound();\n          return;\n        }\n\n        // now we create a diff file named transformedData and store all the data in it . by this we get all the attributes along with the id attribute .\n\n        const transformedData = data.map((item, index) => {\n          return {\n            ...item,\n            id: index\n          };\n        });\n        console.log(transformedData);\n        // setLoader(false)\n\n        //after we get the transformed data we then call setitems wiht that data\n        setItems(transformedData);\n      } catch (error) {\n        // setLoader(false)\n        console.log(\"Error: \", error);\n        alert(\"Some error occurred\");\n      } finally {\n        setLoader(false);\n      }\n    }\n    fetchItems();\n    return () => {\n      setItems([]);\n      setLoader(true);\n    };\n  }, [params.category, queryParams]);\n  const handleNotFound = () => {\n    history.push(\"/404\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-list--wrapper\",\n        children: items.map(item => {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            data: item\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), loader && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n_s(Products, \"ywwUEtJkdh3W4vRNSiiV+CuzPV8=\", false, function () {\n  return [useParams, useHistory, useLocation];\n});\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["useEffect","useState","ListItem","axios","Loader","useHistory","useLocation","useParams","Products","items","setItems","loader","setLoader","params","history","search","queryParams","URLSearchParams","get","fetchItems","slug","category","response","data","handleNotFound","transformedData","map","item","index","id","console","log","error","alert","push"],"sources":["C:/Users/tusha/Desktop/React/ETE/Project/src/components/Products/Products.js"],"sourcesContent":["import { useEffect, useState } from \"react\"  \nimport ListItem from \"./ListItems/ListItem\"\nimport axios from \"axios\"  //for network calls we use axios module\nimport Loader from \"../UI/Loader\"\nimport { useHistory, useLocation, useParams } from \"react-router-dom\"\n\nconst Products = () => {\n    const [items, setItems] = useState([])\n    const [loader, setLoader] = useState(true)\n    const params = useParams()\n    const history = useHistory()\n    const { search } = useLocation()\n    const queryParams = new URLSearchParams(search).get(\"search\")\n\n    useEffect(() => {\n        /* cant directly make the arrow fucntion asynchronous because it may result in asynchronous call but the above funciton is also used synchonously somewhere so bugs may be created . so instead make a new async() function  */\n        async function fetchItems() {\n            try {\n                \n                // we will use this items.json to append after query to read data in a json fromat\n                let slug = `items.json`\n                if(params.category) {\n                    slug = `items-${params.category}.json`\n                }\n                if(queryParams) {\n                    slug += `?search=${queryParams}`\n                }\n                // items-category-1.json\n                const response = await axios.get(`https://react-et-default-rtdb.firebaseio.com/${slug}`)\n                const data = response.data\n                // we store the data from the web in this data\n\n                // if not receviec\n                if(!data) {\n                    handleNotFound();\n                    return;\n                }\n\n                \n                // now we create a diff file named transformedData and store all the data in it . by this we get all the attributes along with the id attribute .\n                  \n                const transformedData = data.map((item, index) => {\n                    return {\n                        ...item,\n                        id: index\n                    }\n                })\n\n                console.log(transformedData);\n                // setLoader(false)\n\n                //after we get the transformed data we then call setitems wiht that data\n                setItems(transformedData)   \n            } \n            catch (error) {\n                // setLoader(false)\n                console.log(\"Error: \", error)\n                alert(\"Some error occurred\");\n            }\n            finally {\n                setLoader(false)\n            }\n        }\n\n        fetchItems();\n\n        return () => {\n            setItems([])\n            setLoader(true)\n        }\n    }, [params.category, queryParams])\n\n    const handleNotFound = () => {\n        history.push(\"/404\")\n    }\n\n    return (\n        <>\n        <div className={\"product-list\"}>\n            <div className={\"product-list--wrapper\"}>\n                {\n                    items.map(item => {\n                        return (<ListItem key={item.id} data={item}/>)\n                    })\n                }\n            </div>\n        </div>\n        { loader && <Loader/>}\n        </>\n    )\n}\n\nexport default Products"],"mappings":"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"},"metadata":{},"sourceType":"module"}