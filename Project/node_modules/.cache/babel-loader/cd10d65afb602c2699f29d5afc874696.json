{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport authReducer from \"./auth\";\n\n// payload contains the actual action data stored in a file\nconst mainReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    items: [],\n    totalAmount: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case 'ADD_ITEM':\n      {\n        let items = [...state.items];\n        let index = items.findIndex(item => item.id === payload.item.id);\n        if (index > -1) {\n          items[index] = {\n            ...items[index],\n            quantity: items[index].quantity + 1\n          };\n        } else {\n          items.push({\n            ...payload.item,\n            quantity: 1\n          });\n        }\n        const totalAmount = state.totalAmount + payload.item.discountedPrice;\n        return {\n          ...state,\n          items: items,\n          totalAmount: totalAmount\n        };\n      }\n    case 'REMOVE_ITEM':\n      {\n        let items = [...state.items];\n        let index = items.findIndex(item => item.id === payload.id);\n        let totalAmount = state.totalAmount - items[index].discountedPrice;\n        if (items[index].quantity === 1) {\n          items.splice(index, 1);\n        } else {\n          items[index] = {\n            ...items[index],\n            quantity: items[index].quantity - 1\n          };\n        }\n        return {\n          ...state,\n          items: items,\n          totalAmount: totalAmount\n        };\n      }\n    case 'CLEAR_CART':\n      {\n        return {\n          items: [],\n          totalAmount: 0\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default combineReducers({\n  cart: mainReducer,\n  auth: authReducer\n});","map":{"version":3,"names":["combineReducers","authReducer","mainReducer","state","items","totalAmount","action","type","payload","index","findIndex","item","id","quantity","push","discountedPrice","splice","cart","auth"],"sources":["C:/Users/tusha/Desktop/React/ETE/Project/src/reducers/index.js"],"sourcesContent":["import { combineReducers } from \"redux\"\nimport authReducer from \"./auth\"\n\n// payload contains the actual action data stored in a file\nconst mainReducer = (state = {\n    items: [],\n    totalAmount: 0\n}, action) => {\n    const { type, payload } = action\n    switch(type) {\n        case 'ADD_ITEM': {\n            let items = [...state.items]\n            let index = items.findIndex(item => item.id === payload.item.id)\n            if(index > -1) {\n                items[index] = {\n                    ...items[index],\n                    quantity: items[index].quantity + 1\n                }\n            }\n            else {\n                items.push({\n                    ...payload.item,\n                    quantity: 1\n                })\n            }\n\n            const totalAmount = state.totalAmount + payload.item.discountedPrice\n\n            return {\n                ...state,\n                items: items,\n                totalAmount: totalAmount\n            }\n        }\n        case 'REMOVE_ITEM': {\n            let items = [...state.items]\n            let index = items.findIndex(item => item.id === payload.id)\n            let totalAmount = state.totalAmount - items[index].discountedPrice\n            \n            if(items[index].quantity === 1) {\n                items.splice(index, 1)\n            }\n            else {\n                items[index] = {\n                    ...items[index],\n                    quantity: items[index].quantity - 1\n                }\n            }\n\n            return {\n                ...state,\n                items: items,\n                totalAmount: totalAmount\n            }\n        }\n        case 'CLEAR_CART': {\n            return {\n                items: [],\n                totalAmount: 0\n            }\n        }\n        default: return state;\n    }\n}\n\nexport default combineReducers({\n    cart: mainReducer,\n    auth: authReducer\n})"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,QAAQ;;AAEhC;AACA,MAAMC,WAAW,GAAG,YAGN;EAAA,IAHOC,KAAK,uEAAG;IACzBC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE;EACjB,CAAC;EAAA,IAAEC,MAAM;EACL,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAOC,IAAI;IACP,KAAK,UAAU;MAAE;QACb,IAAIH,KAAK,GAAG,CAAC,GAAGD,KAAK,CAACC,KAAK,CAAC;QAC5B,IAAIK,KAAK,GAAGL,KAAK,CAACM,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACG,IAAI,CAACC,EAAE,CAAC;QAChE,IAAGH,KAAK,GAAG,CAAC,CAAC,EAAE;UACXL,KAAK,CAACK,KAAK,CAAC,GAAG;YACX,GAAGL,KAAK,CAACK,KAAK,CAAC;YACfI,QAAQ,EAAET,KAAK,CAACK,KAAK,CAAC,CAACI,QAAQ,GAAG;UACtC,CAAC;QACL,CAAC,MACI;UACDT,KAAK,CAACU,IAAI,CAAC;YACP,GAAGN,OAAO,CAACG,IAAI;YACfE,QAAQ,EAAE;UACd,CAAC,CAAC;QACN;QAEA,MAAMR,WAAW,GAAGF,KAAK,CAACE,WAAW,GAAGG,OAAO,CAACG,IAAI,CAACI,eAAe;QAEpE,OAAO;UACH,GAAGZ,KAAK;UACRC,KAAK,EAAEA,KAAK;UACZC,WAAW,EAAEA;QACjB,CAAC;MACL;IACA,KAAK,aAAa;MAAE;QAChB,IAAID,KAAK,GAAG,CAAC,GAAGD,KAAK,CAACC,KAAK,CAAC;QAC5B,IAAIK,KAAK,GAAGL,KAAK,CAACM,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;QAC3D,IAAIP,WAAW,GAAGF,KAAK,CAACE,WAAW,GAAGD,KAAK,CAACK,KAAK,CAAC,CAACM,eAAe;QAElE,IAAGX,KAAK,CAACK,KAAK,CAAC,CAACI,QAAQ,KAAK,CAAC,EAAE;UAC5BT,KAAK,CAACY,MAAM,CAACP,KAAK,EAAE,CAAC,CAAC;QAC1B,CAAC,MACI;UACDL,KAAK,CAACK,KAAK,CAAC,GAAG;YACX,GAAGL,KAAK,CAACK,KAAK,CAAC;YACfI,QAAQ,EAAET,KAAK,CAACK,KAAK,CAAC,CAACI,QAAQ,GAAG;UACtC,CAAC;QACL;QAEA,OAAO;UACH,GAAGV,KAAK;UACRC,KAAK,EAAEA,KAAK;UACZC,WAAW,EAAEA;QACjB,CAAC;MACL;IACA,KAAK,YAAY;MAAE;QACf,OAAO;UACHD,KAAK,EAAE,EAAE;UACTC,WAAW,EAAE;QACjB,CAAC;MACL;IACA;MAAS,OAAOF,KAAK;EAAC;AAE9B,CAAC;AAED,eAAeH,eAAe,CAAC;EAC3BiB,IAAI,EAAEf,WAAW;EACjBgB,IAAI,EAAEjB;AACV,CAAC,CAAC"},"metadata":{},"sourceType":"module"}