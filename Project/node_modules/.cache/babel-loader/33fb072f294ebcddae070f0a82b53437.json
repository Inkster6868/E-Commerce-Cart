{"ast":null,"code":"/* import axios from \"axios\"\n\nconst BASE_URL = 'https://identitytoolkit.googleapis.com/v1/'\nconst API_KEY = 'AIzaSyC-ikjdhleZXWQkjbPQ-NRNlhBl60cMBnM'\n\nexport const signupWithEmailAndPassword = (details, callback) => {\n    return async(dispatch) => {\n        try {\n            const response = await axios.post(`${BASE_URL}accounts:signUp?key=${API_KEY}`, {\n                email: details.email,\n                password: details.password,\n                returnSecureToken: true\n            })\n            dispatch({\n                type: 'SIGNUP',\n                payload: response.data\n            })\n            localStorage.setItem(\"token\", response.data.idToken)\n            return callback(response.data)\n        }\n        catch (error) {\n            return callback({\n                error: true,\n                response: error.response\n            })\n        }\n    }\n}\n\nexport const loginWithEmailAndPassword = (details, callback) => {\n    return async(dispatch) => {\n        try {\n            const response = await axios.post(`${BASE_URL}accounts:signInWithPassword?key=${API_KEY}`, {\n                email: details.email,\n                password: details.password,\n                returnSecureToken: true\n            })\n            dispatch({\n                type: 'LOGIN',\n                payload: response.data\n            })\n            localStorage.setItem(\"token\", response.data.idToken)\n            return callback(response.data)\n        }\n        catch (error) {\n            return callback({\n                error: true,\n                response: error.response\n            })\n        }\n    }\n}\n\nexport const checkIsLoggedIn = callback => {\n    return async(dispatch) => {\n        try {\n            let token = localStorage.getItem(\"token\")\n            if(!token) {\n                return;\n            }\n            const response = await axios.post(`${BASE_URL}accounts:lookup?key=${API_KEY}`, {\n                idToken: token\n            })\n            dispatch({\n                type: 'LOGIN',\n                payload: {\n                    idToken: token,\n                    localId: response.data.users[0].localId,\n                    ...response.data\n                }\n            })\n            return callback(response.data)\n        }\n        catch (error) {\n            return callback({\n                error: true,\n                response: error.response\n            })\n        }\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        localStorage.removeItem(\"token\")\n        dispatch({\n            type: \"LOGOUT\"\n        })\n    }\n} */","map":{"version":3,"names":[],"sources":["C:/Users/tusha/Desktop/React/ETE/Project/src/actions/auth.js"],"sourcesContent":["/* import axios from \"axios\"\n\nconst BASE_URL = 'https://identitytoolkit.googleapis.com/v1/'\nconst API_KEY = 'AIzaSyC-ikjdhleZXWQkjbPQ-NRNlhBl60cMBnM'\n\nexport const signupWithEmailAndPassword = (details, callback) => {\n    return async(dispatch) => {\n        try {\n            const response = await axios.post(`${BASE_URL}accounts:signUp?key=${API_KEY}`, {\n                email: details.email,\n                password: details.password,\n                returnSecureToken: true\n            })\n            dispatch({\n                type: 'SIGNUP',\n                payload: response.data\n            })\n            localStorage.setItem(\"token\", response.data.idToken)\n            return callback(response.data)\n        }\n        catch (error) {\n            return callback({\n                error: true,\n                response: error.response\n            })\n        }\n    }\n}\n\nexport const loginWithEmailAndPassword = (details, callback) => {\n    return async(dispatch) => {\n        try {\n            const response = await axios.post(`${BASE_URL}accounts:signInWithPassword?key=${API_KEY}`, {\n                email: details.email,\n                password: details.password,\n                returnSecureToken: true\n            })\n            dispatch({\n                type: 'LOGIN',\n                payload: response.data\n            })\n            localStorage.setItem(\"token\", response.data.idToken)\n            return callback(response.data)\n        }\n        catch (error) {\n            return callback({\n                error: true,\n                response: error.response\n            })\n        }\n    }\n}\n\nexport const checkIsLoggedIn = callback => {\n    return async(dispatch) => {\n        try {\n            let token = localStorage.getItem(\"token\")\n            if(!token) {\n                return;\n            }\n            const response = await axios.post(`${BASE_URL}accounts:lookup?key=${API_KEY}`, {\n                idToken: token\n            })\n            dispatch({\n                type: 'LOGIN',\n                payload: {\n                    idToken: token,\n                    localId: response.data.users[0].localId,\n                    ...response.data\n                }\n            })\n            return callback(response.data)\n        }\n        catch (error) {\n            return callback({\n                error: true,\n                response: error.response\n            })\n        }\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        localStorage.removeItem(\"token\")\n        dispatch({\n            type: \"LOGOUT\"\n        })\n    }\n} */"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}