{"ast":null,"code":"/* import { Fragment, useEffect, useState } from \"react\"\nimport { NavLink, useHistory, useParams } from \"react-router-dom\"\nimport Loader from \"../UI/Loader\"\nimport { useDispatch } from \"react-redux\"\nimport { loginWithEmailAndPassword, signupWithEmailAndPassword } from \"../../actions/auth\"\n\nconst AuthIndex = () => {\n    const [details, setDetails] = useState({\n        email: \"\",\n        password: \"\"\n    })\n    const [loader, setLoader] = useState(false)\n    const params = useParams()\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const handleInput = e => {\n        setDetails({\n            ...details,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    useEffect(() => {\n        return () => {\n            setLoader(false)\n            setDetails({\n                email: \"\",\n                password: \"\"\n            })\n        }\n    }, [])\n\n    const handleSubmission = e => {\n        e.preventDefault();\n        if(params.type === \"signup\") {\n            setLoader(true)\n            dispatch(signupWithEmailAndPassword(details, data => {\n                if(data.error) {\n                    console.log(data.error)\n                    alert(\"Some error occurred\")\n                }\n                else {\n                    console.log(\"Successfully Signed up!\")\n                    history.replace(\"/\")\n                }\n                setLoader(false)\n            }))\n        }\n        else if (params.type === \"login\") {\n            setLoader(true)\n            dispatch(loginWithEmailAndPassword(details, data => {\n                if(data.error) {\n                    console.log(data.response)\n                    alert(data?.response?.data?.error?.message || \"Some error occurred\")\n                }\n                else {\n                    console.log(\"Successfully Logged in!\")\n                    history.replace(\"/\")\n                }\n                setLoader(false)\n            }))\n        }\n    }\n\n    return (\n        <Fragment>\n            <div className=\"auth-container\">\n                <div className=\"auth-container--box\">\n                    <div className=\"tab-selector\">\n                        <NavLink exact to={\"/login\"}><h3>Login</h3></NavLink>\n                        <NavLink exact to={\"/signup\"}><h3>Signup</h3></NavLink>\n                    </div>\n                    <form autoComplete={\"off\"} onSubmit={handleSubmission}>\n                        <div className=\"input-wrap\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input \n                                type=\"text\" \n                                name=\"email\" \n                                placeholder=\"Enter Email\" \n                                value={details.email} \n                                onChange={handleInput}\n                            />\n                        </div>\n                        <div className=\"input-wrap\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input \n                                type=\"password\" \n                                name=\"password\" \n                                placeholder=\"Enter Password\" \n                                value={details.password}\n                                onChange={handleInput}\n                            />\n                        </div>\n                        <div className=\"button-wrap\">\n                            <button className=\"login-btn\">\n                                {params.type === \"login\" ? \"Login\" : \"Signup\"}\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            { loader && <Loader/> }\n        </Fragment>\n    )\n}\n\nexport default AuthIndex */","map":{"version":3,"names":[],"sources":["C:/Users/tusha/Desktop/React/ETE/Project/src/components/Auth/index.js"],"sourcesContent":["/* import { Fragment, useEffect, useState } from \"react\"\nimport { NavLink, useHistory, useParams } from \"react-router-dom\"\nimport Loader from \"../UI/Loader\"\nimport { useDispatch } from \"react-redux\"\nimport { loginWithEmailAndPassword, signupWithEmailAndPassword } from \"../../actions/auth\"\n\nconst AuthIndex = () => {\n    const [details, setDetails] = useState({\n        email: \"\",\n        password: \"\"\n    })\n    const [loader, setLoader] = useState(false)\n    const params = useParams()\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const handleInput = e => {\n        setDetails({\n            ...details,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    useEffect(() => {\n        return () => {\n            setLoader(false)\n            setDetails({\n                email: \"\",\n                password: \"\"\n            })\n        }\n    }, [])\n\n    const handleSubmission = e => {\n        e.preventDefault();\n        if(params.type === \"signup\") {\n            setLoader(true)\n            dispatch(signupWithEmailAndPassword(details, data => {\n                if(data.error) {\n                    console.log(data.error)\n                    alert(\"Some error occurred\")\n                }\n                else {\n                    console.log(\"Successfully Signed up!\")\n                    history.replace(\"/\")\n                }\n                setLoader(false)\n            }))\n        }\n        else if (params.type === \"login\") {\n            setLoader(true)\n            dispatch(loginWithEmailAndPassword(details, data => {\n                if(data.error) {\n                    console.log(data.response)\n                    alert(data?.response?.data?.error?.message || \"Some error occurred\")\n                }\n                else {\n                    console.log(\"Successfully Logged in!\")\n                    history.replace(\"/\")\n                }\n                setLoader(false)\n            }))\n        }\n    }\n\n    return (\n        <Fragment>\n            <div className=\"auth-container\">\n                <div className=\"auth-container--box\">\n                    <div className=\"tab-selector\">\n                        <NavLink exact to={\"/login\"}><h3>Login</h3></NavLink>\n                        <NavLink exact to={\"/signup\"}><h3>Signup</h3></NavLink>\n                    </div>\n                    <form autoComplete={\"off\"} onSubmit={handleSubmission}>\n                        <div className=\"input-wrap\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input \n                                type=\"text\" \n                                name=\"email\" \n                                placeholder=\"Enter Email\" \n                                value={details.email} \n                                onChange={handleInput}\n                            />\n                        </div>\n                        <div className=\"input-wrap\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input \n                                type=\"password\" \n                                name=\"password\" \n                                placeholder=\"Enter Password\" \n                                value={details.password}\n                                onChange={handleInput}\n                            />\n                        </div>\n                        <div className=\"button-wrap\">\n                            <button className=\"login-btn\">\n                                {params.type === \"login\" ? \"Login\" : \"Signup\"}\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            { loader && <Loader/> }\n        </Fragment>\n    )\n}\n\nexport default AuthIndex */"],"mappings},"metadata":{},"sourceType":"module"}